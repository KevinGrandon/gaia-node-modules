{"version":3,"sources":["../src/moz_build_info.js"],"names":[],"mappings":";;;;;QAGgB,eAAe,GAAf,eAAe;;;;;QAiBf,iBAAiB,GAAjB,iBAAiB;;;;;;;;;;;QAajB,SAAS,GAAT,SAAS;;;;;AA9BlB,SAAS,eAAe,CAAC,EAAE,EAAE;AAClC,UAAQ,EAAE;AACR,SAAK,OAAO;AACV,aAAO,KAAK,CAAC;AAAA,AACf,SAAK,YAAY,CAAC;AAClB,SAAK,cAAc;AACjB,aAAO,SAAS,CAAC;AAAA,AACnB,SAAK,OAAO;AACV,aAAO,KAAK,CAAC;AAAA,AACf;AACE,YAAM,IAAI,KAAK,CAAC,iBAAiB,GAAG,EAAE,CAAC,CAAC;AAAA,GAC3C;CACF;;AAKM,SAAS,iBAAiB,CAAC,EAAE,EAAE;AACpC,SAAO,EAAE,GAAG,GAAG,GAAG,eAAe,CAAC,EAAE,CAAC,CAAC;CACvC;;AAWM,SAAS,SAAS,CAAC,OAAO,EAAE;AACjC,MAAI,MAAM,YAAA,CAAC;AACX,UAAQ,OAAO,CAAC,EAAE;AAChB,SAAK,OAAO;AACV,YAAM,GAAG,UAAU,CAAC;AACpB,YAAM;AAAA,AACR,SAAK,YAAY;AACf,YAAM,GAAG,OAAO,CAAC;AACjB,YAAM;AAAA,AACR,SAAK,cAAc;AACjB,YAAM,GAAG,SAAS,CAAC;AACnB,YAAM;AAAA,AACR,SAAK,OAAO;AACV,YAAM,GAAG,OAAO,CAAC;AACjB,YAAM;AAAA,AACR;AACE,YAAM,IAAI,KAAK,qBAAmB,OAAO,CAAC,EAAE,CAAG,CAAC;AAAA,GACnD;;AAED,UAAQ,OAAO,CAAC,OAAO;AACrB,SAAK,aAAa;AAChB,YAAM,IAAI,QAAQ,CAAC;AACnB,YAAM;AAAA,AACR,SAAK,SAAS;AACZ,YAAM;AAAA,AACR,SAAK,OAAO;AACV,YAAM,IAAI,QAAQ,CAAC;AACnB,YAAM;AAAA,AACR;AACE,YAAM,IAAI,KAAK,sBAAoB,OAAO,CAAC,OAAO,CAAG,CAAC;AAAA,GACzD;;AAED,MAAI,OAAO,CAAC,KAAK,EAAE;AACjB,UAAM,IAAI,QAAQ,CAAC;GACpB;;AAED,SAAO,MAAM,CAAC;CACf","file":"src/moz_build_info.js","sourcesContent":["/**\n * @return filetype the filetype mozilla uses for build archives on a given os.\n */\nexport function archiveFiletype(os) {\n  switch (os) {\n    case 'mac64':\n      return 'dmg';\n    case 'linux-i686':\n    case 'linux-x86_64':\n      return 'tar.bz2';\n    case 'win32':\n      return 'zip';\n    default:\n      throw new Error('Unsupported os ' + os);\n  }\n}\n\n/**\n * @return suffix end of filename (including filetype) for build archive.\n */\nexport function archiveFileSuffix(os) {\n  return os + '.' + archiveFiletype(os);\n}\n\n/**\n * Options:\n *\n *   (String) debug\n *   (String) product\n *   (String) os\n *\n * @return name of build for os.\n */\nexport function buildname(options) {\n  let result;\n  switch (options.os) {\n    case 'mac64':\n      result = 'macosx64';\n      break;\n    case 'linux-i686':\n      result = 'linux';\n      break;\n    case 'linux-x86_64':\n      result = 'linux64';\n      break;\n    case 'win32':\n      result = 'win32';\n      break;\n    default:\n      throw new Error(`Unsupported os ${options.os}`);\n  }\n\n  switch (options.product) {\n    case 'b2g-desktop':\n      result += '_gecko';\n      break;\n    case 'firefox':\n      break;\n    case 'mulet':\n      result += '-mulet';\n      break;\n    default:\n      throw new Error(`Unknown product ${options.product}`);\n  }\n\n  if (options.debug) {\n    result += '-debug';\n  }\n\n  return result;\n}\n"]}